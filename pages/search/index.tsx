import { PodcastContext } from "@/src/context/podcastContext";
import { GraphQLClient } from "graphql-request";
import Head from "next/head";
import { useEffect, useContext, useState, useRef } from "react";
import CardSkeleton from "@/src/components/CardSkeleton";
import SinglePodcast from "@/src/components/SinglePodcast";
import { FormEvent } from "react";
import { AiOutlineSearch } from "react-icons/ai";

function SearchPage() {
	const [podcasts, setPodcasts] = useState([]);
	const [loading, setLoading] = useState(true);
	const { setError, error } = useContext(PodcastContext);
	const [inputValue, setInputValue] = useState("Dear future wifey ");

	function fetchData() {
		setError(null);
		setLoading(true);

		const client = new GraphQLClient("https://api.taddy.org", {
			headers: {
				"X-USER-ID": "1493",
				"X-API-KEY":
					"05d91224222843e9df7f45a0a3b6b6d0842e657db350d3ff071a57452d15c337f1cdf32888f8b96d7afc1d032ac9531fcc",
			},
		});

		const query = `
			query {
				searchForTerm(term:"${inputValue}", filterForTypes:PODCASTSERIES){
					searchId
					podcastSeries{
						uuid
						name
						itunesId
						description
						imageUrl
					}
				}
			}
		`;

		client
			.request(query)
			.then((response: any) => {
				const atlantaPodcasts = response.searchForTerm.podcastSeries.filter((podcast: any) =>
					podcast.name.toLowerCase().includes("atlanta") ||
					podcast.description.toLowerCase().includes("atlanta")
				);
				setPodcasts(atlantaPodcasts);
				if (atlantaPodcasts.length === 0) {
					setLoading(false);
					setError("No Atlanta podcasts found");
				} else {
					setLoading(false);
					setError(null);
				}
			})
			.catch((error) => {
				setLoading(false);
				setError(error.message);
			});
	}

	useEffect(() => {
		fetchData();
		// eslint-disable-next-line react-hooks/exhaustive-deps
	}, []);

	const inputRef = useRef<HTMLInputElement | null>(null);

	function handleSubmit(e: FormEvent<HTMLFormElement>) {
		e.preventDefault();
		if (inputRef?.current?.value === "") {
			return;
		} else {
			fetchData();
		}
	}

	return (
		<>
			<Head key="111">
				<title>Podcast-Search</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<form className="mx-auto mt-3 h-fit" onSubmit={(e) => handleSubmit(e)}>
				<div className="sticky top-3 z-30 mx-auto flex w-full items-center justify-center overflow-hidden rounded-md border-2 border-[#A71930] bg-black">
					<input
						ref={inputRef}
						className="h-full flex-1 bg-black p-2 pl-2 text-white outline-none  placeholder:text-sm placeholder:text-[#888686] "
						onChange={(e) => setInputValue(e.target.value.trim())}
						type="text"
						placeholder="Search for your favorite Podcasts..."
					/>
					<div className="p-2">
						<AiOutlineSearch
							size={20}
							color="white"
							cursor="pointer"
							className="active:scale-[1.07]"
							onClick={() => inputValue.length !== 0 && fetchData()}
						/>
					</div>
				</div>
				<div className="grid content-center text-center text-white">
					{loading && <CardSkeleton cards={25} />}
					{error ? (
						<div className="flex flex-col items-center justify-center h-screen gap-2">
							<h1 className="text-center text-3xl text-[red] md:text-4xl">
								Something went wrongðŸ˜¥
							</h1>
							<p className="text-center text-red-600">
								Please check your internet and try again
								<span className="text-xl">ðŸ˜ª</span>
							</p>
							<button
								onClick={fetchData}
								className=" mt-4 rounded-md bg-[#A71930] py-2 px-10 text-lg text-white shadow-md active:scale-[1.1]"
							>
								Retry
							</button>
						</div>
					) : (
						<div
							className={`mt-3 grid w-full grid-cols-1 gap-4 xs:grid-cols-2
						lg:grid-cols-2
					 xl:grid-cols-3`}
						>
							{podcasts?.map((data: any) => {
								return <SinglePodcast key={data.uuid} data={data} />;
							})}
						</div>
					)}
				</div>
			</form>
		</>
	);
}

export default SearchPage;
